definitions:
  controller.dataBoolean:
    properties:
      data:
        type: boolean
    type: object
  controller.dataCreatePaymentPost:
    properties:
      price_paid:
        type: number
      product_id:
        type: integer
    type: object
  controller.dataCreateProductPost:
    properties:
      name:
        type: string
      price:
        type: number
    type: object
  controller.dataGetAllPaymentReturn:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Payment'
        type: array
    type: object
  controller.dataGetAllProductsReturn:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Product'
        type: array
    type: object
  controller.dataGetPaymentByIdReturn:
    properties:
      data:
        $ref: '#/definitions/model.Payment'
    type: object
  controller.dataGetProductByIdReturn:
    properties:
      data:
        $ref: '#/definitions/model.Product'
    type: object
  controller.dataLogin:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controller.dataLoginResponse:
    properties:
      token:
        type: string
    type: object
  model.Payment:
    properties:
      created_at:
        type: string
      id:
        type: integer
      price_paid:
        type: number
      product_id:
        type: integer
      updated_at:
        type: string
    type: object
  model.Product:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/controller.dataLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.dataLoginResponse'
      summary: route de connexion
      tags:
      - Auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/controller.dataLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.dataBoolean'
      summary: route d'inscription
      tags:
      - Auth
  /api/payments:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.dataGetAllPaymentReturn'
      summary: récupère tous les paiements de la base de données et les renvoie en
        format JSON
      tags:
      - Payments
    post:
      consumes:
      - application/json
      parameters:
      - description: Product object
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/controller.dataCreatePaymentPost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.dataGetPaymentByIdReturn'
      summary: crée un nouveau paiement dans la base de données et le renvoie en format
        JSON
      tags:
      - Payments
    put:
      consumes:
      - application/json
      parameters:
      - description: Product object
        in: body
        name: payment
        required: true
        schema:
          $ref: '#/definitions/controller.dataCreatePaymentPost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.dataGetPaymentByIdReturn'
      summary: met à jour un paiement dans la base de données et le renvoie en format
        JSON
      tags:
      - Payments
  /api/payments/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.dataBoolean'
      summary: met à jour un paiement dans la base de données et le renvoie en format
        JSON
      tags:
      - Payments
    get:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.dataGetPaymentByIdReturn'
      summary: récupère un paiement de la base de données par son ID et le renvoie
        en format JSON
      tags:
      - Payments
  /api/payments/stream:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      summary: récupère tous les paiements de la base de données et les renvoie
      tags:
      - Payments
  /api/products:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.dataGetAllProductsReturn'
      summary: récupère tous les produits de la base de données et les renvoie en
        format JSON
      tags:
      - Product
  /api/products/:
    post:
      consumes:
      - application/json
      parameters:
      - description: Product object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/controller.dataCreateProductPost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.dataGetProductByIdReturn'
      summary: crée un nouveau produit dans la base de données et le renvoie en format
        JSON
      tags:
      - Product
    put:
      consumes:
      - application/json
      parameters:
      - description: Product object
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/controller.dataCreateProductPost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.dataGetProductByIdReturn'
      summary: met à jour un produit dans la base de données et le renvoie en format
        JSON
      tags:
      - Product
  /api/products/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.dataBoolean'
      summary: supprime un produit de la base de données
      tags:
      - Product
    get:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.dataGetProductByIdReturn'
      summary: récupère le produit de la base de données avec son id et les renvoie
        en format JSON
      tags:
      - Product
swagger: "2.0"
